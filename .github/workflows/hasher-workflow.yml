name: Dockercoins CI/CD hasher component
run-name: Dockercoins hasher CI/CD
on: [push]
env:
  CLUSTER: dockercoins-cluster
  CLUSTER_ZONE: europe-west1-b
jobs:
  BuildScanAndPushImage:
    name: Build and push the docker image.
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: hasher
    permissions: write-all
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Get current version
        id: get_current_version
        run: |
          current_version=$(cat VERSION)
          echo "currentVersion=$(cat VERSION)" >> $GITHUB_OUTPUT
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        if: ${{ github.ref == 'refs/heads/main' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.get_current_version.outputs.currentVersion }}
          release_name: Release ${{ steps.get_current_version.outputs.currentVersion }}
          body: |
            Hasher version ${{ steps.get_current_version.outputs.currentVersion }}.
          draft: false
          prerelease: false  
      - name: Get current branch
        id: current_branch
        run: |
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      - name: Calculate image tag
        id: calculate_tag
        run: |
          currentBranch=${{ steps.current_branch.outputs.branch }}
          if [[ $currentBranch == 'main' ]]
            then
              tag=${{ steps.get_current_version.outputs.currentVersion }}
          else
            tag=${{ steps.get_current_version.outputs.currentVersion }}-${{ github.sha }}
          fi   
          echo "tag=$tag" >> $GITHUB_OUTPUT 
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push the Docker image
        uses: docker/build-push-action@v4
        with:
          file: hasher/Dockerfile
          push: true
          tags: |
            mbouzayeni/hasher:${{ steps.calculate_tag.outputs.tag }}
          cache-from: type=registry,ref=mbouzayeni/hasher:buildcache
          cache-to: type=registry,ref=mbouzayeni/hasher:buildcache,mode=max
    outputs:
      imageTag: ${{ steps.calculate_tag.outputs.tag }}      
  Test:
    name: Run Smoke Tests.
    runs-on: ubuntu-latest
    needs: BuildScanAndPushImage
    permissions:
     contents: 'read'
     id-token: 'write'
    defaults:
      run:
        working-directory: hasher
    steps:
    - name: Checkout code
      uses: actions/checkout@master
    - name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: 'projects/334800888869/locations/global/workloadIdentityPools/github-actions/providers/github-actions-oidc'
        service_account: '334800888869-compute@developer.gserviceaccount.com'
        project_id: playground-s-11-34f69086
        cleanup_credentials: false
    - name: Connect to GKE
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ env.CLUSTER }}
        location: ${{ env.CLUSTER_ZONE }}
    - name: copy the manifest file
      run: |
        cp hasher-canary-manifest.yml hasher-canary-manifest-delete.yml
    - name: Update the image tag & the number of canary replicas to 1
      uses: cschleiden/replace-tokens@v1
      with:
        files: '["hasher/hasher-canary-manifest.yml"]'
        tokenPrefix: __
        tokenSuffix: __
      env:
        TAG: ${{ needs.BuildScanAndPushImage.outputs.imageTag }}
        REPLICAS: 1
    - name: Deploy to the gke cluster
      run: kubectl apply -f hasher-canary-manifest.yml
    - name: Replace the URI in the test file
      uses: cschleiden/replace-tokens@v1
      with:
        files: '["hasher/tests/smoke_test.rb"]'
        tokenPrefix: __
        tokenSuffix: __
      env:
        URI: "'http://34.79.77.180:30001'"
    - name: Run Smoke tests
      run: |
        ruby tests/smoke_test.rb
    - name: Update image tag & the number of canary replicas to 0 to delete it
      uses: cschleiden/replace-tokens@v1
      with:
        files: '["hasher/hasher-canary-manifest-delete.yml"]'
        tokenPrefix: __
        tokenSuffix: __
      env:
        TAG: ${{ needs.BuildScanAndPushImage.outputs.imageTag }}
        REPLICAS: 0   
    - name: Delete rng-canary
      run: kubectl apply -f hasher-canary-manifest-delete.yml